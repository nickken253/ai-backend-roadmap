openapi: 3.0.0
info:
  title: API cho Hệ thống Gợi ý Lộ trình Học tập AI
  version: "1.0.0"
  description: Tài liệu API chi tiết cho ứng dụng gợi ý lộ trình học tập cá nhân hóa.
servers:
  - url: http://localhost:5001/api/v1
    description: Development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          example: Lỗi không mong muốn.
    UserInput:
      type: object
      properties:
        email:
          type: string
          example: user@example.com
        password:
          type: string
          example: password123
    UserProfileUpdate:
      type: object
      properties:
        learning_style:
          type: string
          enum: [visual, practical, reading, auditory]
          example: visual
        weekly_goal:
          type: string
          enum: [casual, serious, intensive]
          example: intensive
    RoadmapInput:
      type: object
      properties:
        skills:
          type: array
          items:
            type: object
            properties:
              name: { type: string, example: "React" }
              level: { type: string, example: "Cơ bản" }
        goal:
          type: string
          example: Frontend Developer
        timeline:
          type: string
          example: 4 tháng
        hours:
          type: number
          example: 15
    SavedRoadmap:
      type: object
      properties:
        _id: { type: string, example: "60d5f4f77c3d4a001f8e8b1b" }
        inputs: { type: object }
        result: { type: object }
        created_at: { type: string, format: date-time }
security:
  - bearerAuth: []

tags:
  - name: Auth
    description: Các API liên quan đến xác thực người dùng
  - name: Roadmaps
    description: Các API quản lý lộ trình học tập
  - name: Suggestions
    description: Các API gợi ý sử dụng AI
  - name: Admin
    description: Các API quản trị hệ thống

paths:
  # --- Auth Paths ---
  /auth/register:
    post:
      summary: Đăng ký người dùng mới
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "201": { description: Đăng ký thành công }
        "400": { description: Email đã tồn tại }

  /auth/google:
    get:
      summary: Bắt đầu đăng nhập với Google
      tags: [Auth]
      description: Chuyển hướng người dùng đến trang đăng nhập của Google. Không có response body.
      responses:
        "302": { description: Chuyển hướng đến Google. }

  /auth/github:
    get:
      summary: Bắt đầu đăng nhập với GitHub
      tags: [Auth]
      description: Chuyển hướng người dùng đến trang đăng nhập của GitHub. Không có response body.
      responses:
        "302": { description: Chuyển hướng đến GitHub. }

  /auth/link/details:
    post:
      summary: Lấy chi tiết để xác nhận liên kết tài khoản
      tags: [Auth]
      description: Gửi mergeToken nhận được từ URL để lấy thông tin so sánh giữa tài khoản hiện có và tài khoản mạng xã hội.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkDetailsRequest"
      responses:
        "200":
          description: Trả về thông tin của 2 tài khoản để so sánh.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkDetailsResponse"
        "400":
          description: Token không được cung cấp.
        "404":
          description: Không tìm thấy người dùng từ token.

  /auth/link/complete:
    post:
      summary: Hoàn tất liên kết tài khoản
      tags: [Auth]
      description: Gửi mergeToken và lựa chọn của người dùng (giữ lại thông tin nào) để hoàn tất việc liên kết và đăng nhập.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LinkCompleteRequest"
      responses:
        "200":
          description: Liên kết thành công, trả về token đăng nhập cuối cùng.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkCompleteResponse"
        "400":
          description: Token hoặc lựa chọn không được cung cấp.
        "404":
          description: Không tìm thấy người dùng từ token.

  /auth/send-verification:
    post:
      summary: Gửi (lại) email xác thực
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Gửi email thành công
        "400":
          description: Tài khoản đã được xác thực
        "401":
          description: Chưa đăng nhập

  /auth/login:
    post:
      summary: Đăng nhập
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInput"
      responses:
        "200": { description: Đăng nhập thành công, trả về token }
        "401": { description: Sai email hoặc mật khẩu }

  /auth/me:
    get:
      summary: Lấy thông tin cá nhân
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        "200": { description: Thông tin người dùng }
        "401": { description: Chưa đăng nhập }

  /auth/me/profile:
    put:
      summary: Cập nhật profile người dùng
      tags: [Auth]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfileUpdate"
      responses:
        "200": { description: Cập nhật thành công }

  /auth/me/password:
    put:
      summary: Thay đổi mật khẩu
      tags: [Auth]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword: { type: string }
                newPassword: { type: string }
      responses:
        "200": { description: Đổi mật khẩu thành công }

  /auth/verify-email/{token}:
    get:
      summary: Xác thực email
      tags: [Auth]
      parameters:
        - name: token
          in: path
          required: true
          schema: { type: string }
      responses:
        "200": { description: Xác thực thành công }
        "400": { description: Token không hợp lệ }

  /auth/forgot-password:
    post:
      summary: Yêu cầu đặt lại mật khẩu
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, example: "user@example.com" }
      responses:
        "200": { description: Đã gửi yêu cầu }

  /auth/reset-password/{token}:
    put:
      summary: Đặt lại mật khẩu mới
      tags: [Auth]
      parameters:
        - name: token
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password: { type: string, example: "newpassword456" }
      responses:
        "200": { description: Đặt lại mật khẩu thành công }
        "400": { description: Token không hợp lệ }

  # --- Roadmap Paths ---
  /roadmaps/generate:
    post:
      summary: Tạo lộ trình mới bằng AI
      tags: [Roadmaps]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoadmapInput"
      responses:
        "201":
          description: Tạo và lưu lộ trình thành công
        "500":
          description: Lỗi từ AI hoặc server

  /roadmaps:
    get:
      summary: Lấy lịch sử lộ trình
      tags: [Roadmaps]
      security:
        - bearerAuth: []
      responses:
        "200": { description: Mảng chứa lịch sử lộ trình }

  /roadmaps/{id}:
    get:
      summary: Lấy chi tiết lộ trình
      tags: [Roadmaps]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        "200": { description: Dữ liệu chi tiết của lộ trình }
        "404": { description: Không tìm thấy }
    delete:
      summary: Xóa một lộ trình
      tags: [Roadmaps]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        "200": { description: Xóa thành công }
    put:
      summary: Lưu lại lộ trình đã sửa
      tags: [Roadmaps]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoadmapResult"
      responses:
        "200": { description: Cập nhật thành công }

  /roadmaps/review:
    post:
      summary: Nhờ AI đánh giá lộ trình
      tags: [Roadmaps]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                original_roadmap: { type: object }
                modified_roadmap: { type: object }
      responses:
        "200": { description: Phản hồi từ AI }

  # --- Suggestion Paths ---
  /suggestions/goals:
    get:
      summary: Lấy danh sách mục tiêu nghề nghiệp
      tags: [Suggestions]
      responses:
        "200": { description: Mảng chứa các mục tiêu }

  /suggestions/skills:
    get:
      summary: Gợi ý kỹ năng
      tags: [Suggestions]
      security:
        - bearerAuth: []
      parameters:
        - name: goal
          in: query
          required: true
          schema: { type: string }
      responses:
        "200": { description: Mảng chứa các kỹ năng gợi ý }

  # --- Admin Paths ---
  /admin/logs:
    get:
      summary: (Admin) Lấy danh sách logs
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema: { type: string, enum: [SUCCESS, FAILED] }
        - name: logType
          in: query
          schema: { type: string, enum: [generate, review, suggest_skills] }
        - name: userId
          in: query
          schema: { type: string }
      responses:
        "200": { description: Mảng chứa các log }
        "403": { description: Không có quyền }

  /admin/logs/{id}:
    get:
      summary: (Admin) Lấy chi tiết một log
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        "200": { description: Dữ liệu chi tiết của log }
        "404": { description: Không tìm thấy }

  /admin/users:
    get:
      summary: (Admin) Lấy danh sách người dùng
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        "200": { description: Mảng chứa các người dùng }
        "403": { description: Không có quyền }

  /admin/users/{id}:
    get:
      summary: (Admin) Lấy chi tiết một người dùng
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      responses:
        "200": { description: Dữ liệu chi tiết của người dùng }
        "404": { description: Không tìm thấy }

  /admin/users/{id}/status:
    put:
      summary: (Admin) Cập nhật trạng thái người dùng
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_active: { type: boolean, example: false }
      responses:
        "200": { description: Cập nhật thành công }

  /admin/users/{id}/role:
    put:
      summary: (Admin) Cập nhật vai trò người dùng
      tags: [Admin]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role: { type: string, enum: [user, admin], example: "admin" }
      responses:
        "200": { description: Cập nhật thành công }

  /admin/stats/dashboard:
    get:
      summary: (Admin) Lấy thống kê tổng quan
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        "200": { description: Dữ liệu thống kê tổng quan }

  /admin/stats/popular-goals:
    get:
      summary: (Admin) Thống kê các mục tiêu phổ biến
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        "200": { description: Mảng chứa thống kê các mục tiêu }

  /admin/stats/study-time:
    get:
      summary: (Admin) Thống kê thời gian học trung bình
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        "200": { description: Dữ liệu thống kê thời gian học }

  /admin/stats/popular-skills:
    get:
      summary: (Admin) Thống kê các kỹ năng phổ biến
      tags: [Admin]
      security:
        - bearerAuth: []
      responses:
        "200": { description: Mảng chứa thống kê các kỹ năng }
